{"version":3,"sources":["components/Tasks/TaskInput/TaskInput.module.css","components/UI/Button/Button.module.css","components/Tasks/TaskItem/TaskItem.js","components/Tasks/TaskList/TaskList.js","components/UI/Button/Button.js","components/Tasks/TaskInput/TaskInput.js","App.js","index.js"],"names":["module","exports","TaskItem","props","className","onClick","onDelete","id","children","TaskList","items","map","task","onDeleteItem","text","Button","type","styles","button","TaskInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","e","preventDefault","trim","length","onAddTask","invalid","onChange","target","value","App","tasks","setTasks","content","style","textAlign","taskId","prevTasks","filter","enteredText","updatedTasks","unshift","Math","random","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,eAAe,gCAAgC,QAAU,6B,iBCA3ED,EAAOC,QAAU,CAAC,OAAS,yB,2LCiBZC,EAfE,SAACC,GAQhB,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCGEC,G,MAZE,SAACN,GAChB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAwBL,GAAIK,EAAKL,GAAID,SAAUH,EAAMU,aAArD,SACGD,EAAKE,MADOF,EAAKL,W,gBC8BbQ,EARA,SAACZ,GACd,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAWa,IAAOC,OAAQb,QAASF,EAAME,QAAnE,SACGF,EAAMK,Y,gBCgCEW,EAjCG,SAAChB,GAAW,IAAD,EACaiB,mBAAS,IADtB,mBACpBC,EADoB,KACNC,EADM,OAEGF,oBAAS,GAFZ,mBAEpBG,EAFoB,KAEXC,EAFW,KAoB3B,OACE,uBAAMC,SAVkB,SAACC,GACzBA,EAAEC,iBACiC,IAA/BN,EAAaO,OAAOC,OAIxB1B,EAAM2B,UAAUT,GAHdG,GAAW,IAOb,UACE,sBACEpB,UAAS,UAAKa,IAAO,gBAAZ,aAAgCM,GAAWN,IAAOc,SAD7D,UAGE,wDACA,uBAAOf,KAAK,OAAOgB,SAtBM,SAACN,GAC1BA,EAAEO,OAAOC,MAAMN,OAAOC,OAAS,GACjCL,GAAW,GAEbF,EAAgBI,EAAEO,OAAOC,aAoBvB,cAAC,EAAD,CAAQlB,KAAK,SAAb,0BChBSmB,G,MAvCH,WAAO,IAAD,EACUf,mBAAS,CACjC,CAAEN,KAAM,oBAAqBP,GAAI,MACjC,CAAEO,KAAM,qBAAsBP,GAAI,QAHpB,mBACT6B,EADS,KACFC,EADE,KAqBZC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CAOF,OAJIJ,EAAMP,OAAS,IACjBS,EAAU,cAAC,EAAD,CAAU5B,MAAO0B,EAAOvB,aAZV,SAAC4B,GACzBJ,GAAS,SAACK,GAER,OADqBA,EAAUC,QAAO,SAAC/B,GAAD,OAAUA,EAAKL,KAAOkC,YAc9D,gCACE,yBAASlC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAWuB,UA1BM,SAACc,GACtBP,GAAS,SAACK,GACR,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAEhC,KAAM8B,EAAarC,GAAIwC,KAAKC,SAASC,aACrDJ,UAwBP,yBAAStC,GAAG,QAAZ,SAAqB+B,SClC3BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6eb4ee9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"TaskInput_form-control__3RXnf\",\"invalid\":\"TaskInput_invalid__21JeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","import React from \"react\";\nimport \"./TaskItem.css\";\n\nconst TaskItem = (props) => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"task-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import React from \"react\";\nimport TaskItem from \"../TaskItem/TaskItem\";\nimport \"./TaskList.css\";\n\nconst TaskList = (props) => {\n  return (\n    <ul className=\"task-list\">\n      {props.items.map((task) => (\n        <TaskItem key={task.id} id={task.id} onDelete={props.onDeleteItem}>\n          {task.text}\n        </TaskItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport styles from \"./Button.module.css\";\n// import styled from \"styled-components\";\n\n// const Button = styled.button`\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   width: 100%;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n\n//   &:focus {\n//     outline: none;\n//   }\n\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n// `;\n\nconst Button = (props) => {\n  return (\n    <button type={props.type} className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./TaskInput.module.css\";\n// import styled from \"styled-components\";\n\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${(props) => (props.invalid ? \"red\" : \"black\")};\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n//     background: ${(props) => (props.invalid ? \"#f7d6d6\" : \"transparent\")};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nconst TaskInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const taskInputChangeHandler = (e) => {\n    if (e.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(e.target.value);\n  };\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddTask(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div\n        className={`${styles[\"form-control\"]} ${!isValid && styles.invalid}`}\n      >\n        <label>Tasks I need to do:</label>\n        <input type=\"text\" onChange={taskInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Task</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n","import React, { useState } from \"react\";\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { text: \"Do all exercises!\", id: \"g1\" },\n    { text: \"Finish the course!\", id: \"g2\" },\n  ]);\n\n  const addTaskHandler = (enteredText) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n      updatedTasks.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedTasks;\n    });\n  };\n\n  const deleteItemHandler = (taskId) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\n      return updatedTasks;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>No tasks found. Maybe add one?</p>\n  );\n\n  if (tasks.length > 0) {\n    content = <TaskList items={tasks} onDeleteItem={deleteItemHandler} />;\n  }\n\n  return (\n    <div>\n      <section id=\"task-form\">\n        <TaskInput onAddTask={addTaskHandler} />\n      </section>\n      <section id=\"tasks\">{content}</section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}